
-- EMPECHE D'EMPRUNTER UN LIVRE PAS ENCORE RENDU/UPDATE de date.

DROP TRIGGER IF EXISTS AutoEmpRetourEmprunt ;

DELIMITER //

CREATE TRIGGER AutoEmpRetourEmprunt
BEFORE INSERT ON RETOUREMPRUNT
FOR EACH ROW
BEGIN 
	DECLARE EstDisponible VARCHAR(10) default NULL;
	DECLARE PeuEmprunter int(1) default 0;
	DECLARE Pris VARCHAR(3) default 0;

	SELECT IDLIVRE INTO EstDisponible
	FROM RETOUREMPRUNT
	WHERE IDLIVRE=NEW.IDLIVRE
	AND IDEXEMPLAIRE=NEW.IDEXEMPLAIRE
	AND DATERETOUR IS NULL ;

	SELECT COUNT(IdEmprunt) INTO PeuEmprunter
	FROM RETOUREMPRUNT
	WHERE IDAdherent=NEW.IDAdherent
	AND DATERETOUR IS NULL;

	IF EstDisponible IS NOT NULL THEN
		DELETE FROM  RETOUREMPRUNT WHERE IDEXEMPLAIRE="LIVRE JAMAIS RENDU" ;
	END IF ;

	IF PeuEmprunter > 1 THEN 
		DELETE FROM RETOUREMPRUNT WHERE IDEXEMPLAIRE="LIMITE D'EMPRUNTS" ;
	END IF;

	IF EstDisponible IS NULL THEN
		SET NEW.DATERETOURPREVU=DATE_ADD(CURDATE(), INTERVAL 31 DAY) ;
		SET NEW.DATEEMPRUNT=DATE_ADD(CURDATE(), INTERVAL 1 DAY) ;
		SET NEW.EtePris='Non';
	END IF;
END //
DELIMITER ;



DROP PROCEDURE IF EXISTS DeleteNonEmprunts ;

DELIMITER //

CREATE PROCEDURE DeleteNonEmprunts()
BEGIN
DECLARE FINI int default 0;
DECLARE IdEmp int(5) ;
DECLARE CurEmp CURSOR for
Select IDEmprunt
FROM RetourEmprunt
WHERE DATERETOUR IS NULL
AND DATEEMPRUNT<Curdate()
AND Etepris='Non';
DECLARE Continue HANDLER FOR NOT FOUND SET fini=1 ;
Open CurEmp ; 
FETCH CurEmp into
IdEmp ;
While fini !=1
DO 
	DELETE FROM RetourEmprunt
	where IdEmprunt = IdEmp ;
	FETCH CurEmp into IdEmp ;
END WHILE ;
Close CurEmp ;
END //
DELIMITER ;



